package_info slice =
  let Length<T>: []T -> int
  let Last<T>: []T -> T
  let Head<T>: []T -> T
  let Tail<T>: []T -> []T
  let PopLast<T>: []T -> []T
  let Append<T>: T->[]T->[]T
  let Prepend<T>: T->[]T->[]T
  let Take<T> : int->[]T->[]T
  let Map<T, U> : (T->U)->[]T->[]U
  let Mapi<T, U> : (int->T->U)->[]T->[]U
  let Iter<T> : (T->())->[]T->()
  let Filter<T> : (T->bool)->[]T->[]T
  let Sort<T>: []T -> []T
  let SortBy<T, U>: (T->U)->[]T->[]T
  let Skip<T>: int->[]T->[]T
  let Zip<T, U>: []T->[]U->[]T*U
  let Forall<T>: (T->bool)->[]T->bool
  let Forany<T>: (T->bool)->[]T->bool

